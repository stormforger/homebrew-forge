# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Forge < Formula
  desc "The StormForger Command Line Client, called 'forge'"
  homepage "https://stormforger.com"
  version "0.45.1"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stormforger/cli/releases/download/v0.45.1/forge_v0.45.1_darwin_amd64.zip"
      sha256 "900f0d133310d895a6539b488e2f2d3af8cbb157ae42164c8b09d26413695447"
    end
    if Hardware::CPU.arm?
      url "https://github.com/stormforger/cli/releases/download/v0.45.1/forge_v0.45.1_darwin_arm64.zip"
      sha256 "03b77e02773c39e26cf47546fa359a1b9df1b523ee1868815835350b28f31d89"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stormforger/cli/releases/download/v0.45.1/forge_v0.45.1_linux_amd64.tar.gz"
      sha256 "0732c095913b51c7b701de75ab02cbd61e628c3b4753efdd4a469ee9c5815e9a"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stormforger/cli/releases/download/v0.45.1/forge_v0.45.1_linux_arm64.tar.gz"
      sha256 "648d53b010e409203039ab094974a735395be8c4cceacb455bd93c70aec6618f"
    end
  end

  def install
    bin.install "forge"

    # generate and install bash completion
    output = Utils.safe_popen_read("#{bin}/forge", "completion", "bash")
    (bash_completion/"forge").write output

    # generate and install zsh completion
    output = Utils.safe_popen_read("#{bin}/forge", "completion", "zsh")
    (zsh_completion/"_forge").write output
  end
end
