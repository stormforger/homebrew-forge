# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Forge < Formula
  desc "The StormForger Command Line Client, called 'forge'"
  homepage "https://stormforger.com"
  version "0.45.2"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stormforger/cli/releases/download/v0.45.2/forge_v0.45.2_darwin_amd64.zip"
      sha256 "b0cd6c9cbb9aefd2e3542967db0629b8620eeed02ca17d10ef74fbaa67e29765"
    end
    if Hardware::CPU.arm?
      url "https://github.com/stormforger/cli/releases/download/v0.45.2/forge_v0.45.2_darwin_arm64.zip"
      sha256 "56155686a86e381662a980c4fac0c36c2a20f17b41149b177fac661a1fda7816"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stormforger/cli/releases/download/v0.45.2/forge_v0.45.2_linux_amd64.tar.gz"
      sha256 "7e754786e6a8e8ec8f0858addd3a59c20fe3ddc5776745cdd23005e25192b0cf"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stormforger/cli/releases/download/v0.45.2/forge_v0.45.2_linux_arm64.tar.gz"
      sha256 "e83113ab536dd77d932857263cb73b85a5898204516e501b1c974851ca321a86"
    end
  end

  def install
    bin.install "forge"

    # generate and install bash completion
    output = Utils.safe_popen_read("#{bin}/forge", "completion", "bash")
    (bash_completion/"forge").write output

    # generate and install zsh completion
    output = Utils.safe_popen_read("#{bin}/forge", "completion", "zsh")
    (zsh_completion/"_forge").write output
  end
end
